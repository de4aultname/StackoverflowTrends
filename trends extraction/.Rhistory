library(dplyr)
library(tidyr)
nginx_theme %>% select(-c("Tag", "Propensity")) %>% colsum()
nginx_theme %>% select(-c("Tag", "Propensity")) %>% colSums() -> nginx_theme_general
nginx_theme %>% select(-c("Tag", "Propensity")) %>% colSums()
nginx_theme
nginx_theme %>% select(-c("Tag", "Propensity")) %>%
mutate(popularity = colSums()) ->
nginx_theme_general
is.data.frame(nginx_theme)
nginx_theme %>% select(-c("Tag", "Propensity")) %>%
mutate(popularity = colSums())
nginx_theme %>% select(-c("Tag", "Propensity"))
nginx_theme <- quarter1[which(quarter1$TopicNumber == 'topic_845'),]
nginx_theme %>% select(-c("Tag", "Propensity", TopicNumber)) %>%
mutate(Popularity = colSums()) -> nginx_theme
nginx_theme %>% select(-c("Tag", "Propensity", TopicNumber))
colSums(nginx_theme %>% select(-c("Tag", "Propensity", TopicNumber)))
nginx_theme %>% select(-c("Tag", "Propensity", TopicNumber)) %>%
mutate(Popularity = colSums()) ->
nginx_theme_general
nginx_theme %>% select(-c("Tag", "Propensity", TopicNumber)) %>%
mutate(Popularity = colSums())
nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber")) %>%
mutate(Popularity = colSums()) ->
nginx_theme_general
nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber")) %>%
mutate(Popularity = colSums())
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) %>%
nginx_theme_general
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
nginx_theme_general
nginx_theme_general
is.data.frame()
is.data.frame(nginx_theme_general)
nginx_theme_general <- data.frame(nginx_theme_general)
nginx_theme_general
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("X4.2019", "X1.2020")) %>% quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
nginx_theme_general
nginx_theme_general <- data.frame(nginx_theme_general)
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("X4.2019", "X1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
nginx_theme_general
nginx_theme_general <- data.frame(nginx_theme_general)
nginx_theme_general
rownames(nginx_theme_general)
nginx_theme_general <- data.frame(nginx_theme_general) %>% mutate(time = rownames())
nginx_theme_general <- data.frame(nginx_theme_general)
nginx_theme_general$time = rownames(nginx_theme_general)
nginx_theme_general
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
popularity
nginx_theme_general <- data.frame(popularity)
nginx_theme_general$time = rownames(nginx_theme_general)
nginx_theme_general
ggplot(nginx_theme_general, aes(x = time, y = popularity)) + geom_line()
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) + geom_line()
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) + geom_line(size = 9)
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) + geom_line(size = 1)
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) + geom_line(size = 0.5)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 3))
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(face="bold", angle=45))
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle=45))
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 4)) +
theme(axis.text.x = element_text(angle=45))
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
View(nginx_theme_general)
every_nth(3)
test <- every_nth(3)
test(3)
test(nginx_theme_general$time)
ggplot(nginx_theme_general, aes(x = as.factor(time), y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
?ordered
ggplot(nginx_theme_general, aes(x = ordered(time), y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
nginx_theme_general$time <- ordered(nginx_theme_general$time, levels = nginx_theme_general$time)
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.5) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("q4.2019", "q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
popularity
nginx_theme_general <- data.frame(popularity)
nginx_theme_general$time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$time <- ordered(nginx_theme_general$time, levels = nginx_theme_general$time)
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
popularity
nginx_theme_general <- data.frame(popularity)
nginx_theme_general$time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$time <- ordered(nginx_theme_general$time, levels = nginx_theme_general$time)
ggplot(nginx_theme_general, aes(x = time, y = popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
popularity
nginx_theme
?gather
?pivot_longer
View(nginx_theme)
pivot_longer(nginx_theme, Tag, Taf)
nginx_theme_general$time
nginx_theme_gathered <- data.frame(rep(nginx_theme_general$Tag, len(nginx_theme_general$time)),nginx_theme_general$time)
nginx_theme_gathered <- data.frame(rep(nginx_theme_general$Tag, length(nginx_theme_general$time)),nginx_theme_general$time)
rep(nginx_theme_general$Tag, length(nginx_theme_general$time)
)
length(nginx_theme_general$time)
rep(nginx_theme_general$Tag)
nginx_theme$Tag
rep(nginx_theme$Tag, length(nginx_theme_general$time))
nginx_theme_gathered <- data.frame(rep(nginx_theme$Tag, length(nginx_theme_general$time)),rep(nginx_theme_general$time, length(nginx_theme_general$time)))
nginx_theme_gathered
nginx_theme_gathered <- data.frame(rep(nginx_theme$Tag, length(nginx_theme_general$time)),rep(nginx_theme_general$time, length(nginx_theme_general$time)))
colnames(nginx_theme_gathered) <- c("Tag", "Time")
View(nginx_theme_gathered)
nginx_theme_general$time
times <- nginx_theme_general$time
times <- c(times)
times
times <- nginx_theme_general$time
times <- as.character(times)
rimws
times
pivot_longer(nginx_theme, times, "Time")
length(times)
45*9
nginx_theme_gathered <- gather(nginx_theme, times, "Time")
View(nginx_theme_gathered)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time")
View(nginx_theme_gathered)
ggplot(nginx_theme_gathered, aes(x = time, y = value, col = Tag))
ggplot(nginx_theme_gathered, aes(x = time, y = value, col = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
nginx_theme_gathered$Time
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = nginx_theme_gathered$Time)
unique(nginx_theme_gathered$Time)
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
?reorder
nginx_theme_gathered$Tag <- reorder(nginx_theme_gathered, Propensity)
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
?reorder
View(nginx_theme_gathered)
with(nginx_theme_gathered, reorder(Tag, Propensity))
?with
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_general, aes(x = Time, y = popularity, group = 1)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
nginx_theme_general <- data.frame(Popularity)
nginx_theme_general$Time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$Time <- ordered(nginx_theme_general$Time, levels = nginx_theme_general$Time)
ggplot(nginx_theme_general, aes(x = Time, y = popularity, group = 1)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
nginx_theme_general <- data.frame(Popularity)
nginx_theme_general$Time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$Time <- ordered(nginx_theme_general$Time, levels = nginx_theme_general$Time)
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times <- as.character(nginx_theme_general$time)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.8) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times
nginx_theme_general$time
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
nginx_theme_general <- data.frame(Popularity)
nginx_theme_general$Time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$Time <- ordered(nginx_theme_general$Time, levels = nginx_theme_general$Time)
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times <- as.character(nginx_theme_general$Time)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
?pivot_longer
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time", values_to = "Popularity")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = value, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
nginx_theme
colSums(nginx_theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
nginx_theme_general <- data.frame(Popularity)
nginx_theme_general$Time = rownames(nginx_theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
nginx_theme_general$Time <- ordered(nginx_theme_general$Time, levels = nginx_theme_general$Time)
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45), panel.background = element_blank())
times <- as.character(nginx_theme_general$Time)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time", values_to = "Popularity")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45), panel.background = element_blank())
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45)) + theme_bw()
times <- as.character(nginx_theme_general$Time)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time", values_to = "Popularity")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45)) + theme_bw()
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45), panel.border = element_blank())
times <- as.character(nginx_theme_general$Time)
nginx_theme_gathered <- pivot_longer(nginx_theme, times, "Time", values_to = "Popularity")
nginx_theme_gathered$Time <- ordered(nginx_theme_gathered$Time, levels = unique(nginx_theme_gathered$Time))
nginx_theme_gathered$Tag  <- with(nginx_theme_gathered, reorder(Tag, -Propensity))
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45), panel.border = element_blank())
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45), panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45),
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "gray"))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45),
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "gray"))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45),
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.minor = element_line(size = 0.1,
colour = "gray"))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45),
panel.background = element_rect(fill = "white", colour = "white",
size = 2, linetype = "solid"),
panel.grid.minor = element_line(size = 0.1,
colour = "gray"),
axis.line = element_line(colour = "black"))
ggplot(nginx_theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(nginx_theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
theme
colSums(theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
theme_general <- data.frame(Popularity)
theme_general$Time = rownames(theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
theme_general$Time <- ordered(theme_general$Time, levels = theme_general$Time)
ggplot(theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times <- as.character(theme_general$Time)
theme_gathered <- pivot_longer(theme, times, "Time", values_to = "Popularity")
theme_gathered$Time <- ordered(theme_gathered$Time, levels = unique(theme_gathered$Time))
theme_gathered$Tag  <- with(theme_gathered, reorder(Tag, -Propensity))
ggplot(theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> quarter1
quarter1[which(quarter1$TopicNumber == 'topic_845'),] ->
theme
colSums(theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
theme_general <- data.frame(Popularity)
theme_general$Time = rownames(theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
theme_general$Time <- ordered(theme_general$Time, levels = theme_general$Time)
ggplot(theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times <- as.character(theme_general$Time)
theme_gathered <- pivot_longer(theme, times, "Time", values_to = "Popularity")
theme_gathered$Time <- ordered(theme_gathered$Time, levels = unique(theme_gathered$Time))
theme_gathered$Tag  <- with(theme_gathered, reorder(Tag, -Propensity))
ggplot(theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45))
library(ggplot2)
library(dplyr)
library(tidyr)
#read.csv("final1_quarter.csv", header = T) %>% select(-c("Q4.2019", "Q1.2020")) -> df
read.csv("final1_year.csv", header = T) -> df
df[which(df$TopicNumber == 'topic_845'),] ->
theme
colSums(theme %>% select(-c("Tag", "Propensity", "TopicNumber"))) ->
Popularity
theme_general <- data.frame(Popularity)
theme_general$Time = rownames(theme_general)
every_nth = function(n) {
return(function(x) {x[c(TRUE, rep(FALSE, n - 1))]})
}
theme_general$Time <- ordered(theme_general$Time, levels = theme_general$Time)
ggplot(theme_general, aes(x = Time, y = Popularity, group = 1)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 2)) +
theme(axis.text.x = element_text(angle = 45))
times <- as.character(theme_general$Time)
theme_gathered <- pivot_longer(theme, times, "Time", values_to = "Popularity")
theme_gathered$Time <- ordered(theme_gathered$Time, levels = unique(theme_gathered$Time))
theme_gathered$Tag  <- with(theme_gathered, reorder(Tag, -Propensity))
ggplot(theme_gathered, aes(x = Time, y = Popularity, col = Tag, group = Tag)) +
geom_line(size = 0.7) +
scale_x_discrete(breaks = every_nth(n = 3)) +
theme(axis.text.x = element_text(angle = 45))
